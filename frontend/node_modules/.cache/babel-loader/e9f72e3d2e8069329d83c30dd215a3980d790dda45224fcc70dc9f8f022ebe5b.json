{"ast":null,"code":"var _jsxFileName = \"/Users/lin/Documents/instalily/case-study/frontend/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./ChatWindow.css\";\nimport { getAIMessage } from \"../api/api\";\nimport { marked } from \"marked\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow() {\n  _s();\n  const defaultMessage = [{\n    role: \"assistant\",\n    content: \"Hello, I'm the customer service bot for PartSelect! How can I help you?\"\n  }];\n  const [messages, setMessages] = useState(defaultMessage);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSend = async input => {\n    if (input.trim() !== \"\") {\n      // Set user message\n      setMessages(prevMessages => [...prevMessages, {\n        role: \"user\",\n        content: input\n      }]);\n      setInput(\"\");\n\n      // Call API & set assistant message\n      const newMessage = await getAIMessage(input);\n      console.log(\"Received message:\", newMessage);\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-container\",\n    children: [messages.map((message, index) => {\n      const formattedContent = message.content.replace(/\\\\boxed\\{([\\s\\S]*)\\}$/m, \"$1\");\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${message.role}-message-container`,\n        children: message.content && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.role}-message`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: marked.parse(formattedContent).replace(/<p>|<\\/p>/g, \"\")\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\",\n        onKeyPress: e => {\n          if (e.key === \"Enter\" && !e.shiftKey) {\n            handleSend(input);\n            e.preventDefault();\n          }\n        },\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n}\n_s(ChatWindow, \"dBdiAFt4LBmHuuexA15GqKsfWtk=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","getAIMessage","marked","jsxDEV","_jsxDEV","ChatWindow","_s","defaultMessage","role","content","messages","setMessages","input","setInput","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","handleSend","trim","prevMessages","newMessage","console","log","className","children","map","message","index","formattedContent","replace","dangerouslySetInnerHTML","__html","parse","fileName","_jsxFileName","lineNumber","columnNumber","ref","value","onChange","e","target","placeholder","onKeyPress","key","shiftKey","preventDefault","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/lin/Documents/instalily/case-study/frontend/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./ChatWindow.css\";\nimport { getAIMessage } from \"../api/api\";\nimport { marked } from \"marked\";\n\nfunction ChatWindow() {\n\n  const defaultMessage = [{\n    role: \"assistant\",\n    content: \"Hello, I'm the customer service bot for PartSelect! How can I help you?\"\n  }];\n\n  const [messages,setMessages] = useState(defaultMessage)\n  const [input, setInput] = useState(\"\");\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n      scrollToBottom();\n  }, [messages]);\n\n  const handleSend = async (input) => {\n    if (input.trim() !== \"\") {\n      // Set user message\n      setMessages(prevMessages => [...prevMessages, { role: \"user\", content: input }]);\n      setInput(\"\");\n\n      // Call API & set assistant message\n      const newMessage = await getAIMessage(input);\n      console.log(\"Received message:\", newMessage);\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    }\n  };\n\n  return (\n      <div className=\"messages-container\">\n          {messages.map((message, index) => {\n            const formattedContent = message.content.replace(/\\\\boxed\\{([\\s\\S]*)\\}$/m, \"$1\");\n            return (\n              <div key={index} className={`${message.role}-message-container`}>\n                {message.content && (\n                  <div className={`message ${message.role}-message`}>\n                    <div dangerouslySetInnerHTML={{ __html: marked.parse(formattedContent).replace(/<p>|<\\/p>/g, \"\") }}></div>\n                  </div>\n                )}\n              </div>\n            );\n          })}\n          <div ref={messagesEndRef} />\n          <div className=\"input-area\">\n            <input\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"Type a message...\"\n              onKeyPress={(e) => {\n                if (e.key === \"Enter\" && !e.shiftKey) {\n                  handleSend(input);\n                  e.preventDefault();\n                }\n              }}\n              rows=\"3\"\n            />\n            <button className=\"send-button\" onClick={handleSend}>\n              Send\n            </button>\n          </div>\n      </div>\n);\n}\n\nexport default ChatWindow;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}